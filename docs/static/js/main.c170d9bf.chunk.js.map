{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","category","type","value","onChange","target","protoType","PropType","func","isRequired","getGifs","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","setTimeout","console","log","useFetchGifs","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"2MAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAERC,mBAAS,IAFD,mBAErCC,EAFqC,KAEzBC,EAFyB,KAmB5C,OAEI,sBAAMC,SAZW,SAACC,GAClBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAO,IAExBR,GAAc,SAAAS,GAAQ,OAAIP,GAAJ,mBAAkBO,OACxCN,EAAc,MAMlB,SACI,uBACIO,KAAK,OACLC,MAAST,EACTU,SArBc,SAACP,GAEvBF,EAAcE,EAAEQ,OAAOF,aA2B/BZ,EAAYe,UAAU,CAElBd,c,OAAce,EAASC,KAAKC,Y,mCCpCnBC,EAAO,uCAAG,WAAMT,GAAN,uBAAAU,EAAA,6DAEbC,EAFa,iDAEmCC,UAAUZ,GAF7C,gEAGAa,MAAMF,GAHN,cAGbG,EAHa,gBAIEA,EAAKC,OAJP,uBAIZC,EAJY,EAIZA,KAGDC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAM,CACFC,GAAGD,EAAIC,GACPC,MAAMF,EAAIE,MACVV,IAAG,UAACQ,EAAIG,cAAL,aAAC,EAAYC,iBAAiBZ,QAXtB,kBAgBZM,GAhBY,4CAAH,sDCAPO,EAAc,SAAC,GAAmB,IAAlBH,EAAiB,EAAjBA,MAAQV,EAAS,EAATA,IAEjC,OACI,sBAAKc,UAAU,6CAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCFHO,EAAU,SAAC,GAAgB,IAAf5B,EAAc,EAAdA,SAAc,ECDX,SAACA,GAAY,IAAD,EAEVR,mBAAS,CAE/BwB,KAAM,GACNa,SAAS,IALuB,mBAE7BC,EAF6B,KAEtBC,EAFsB,KAwBpC,OAhBAC,qBAAW,WAEPvB,EAAQT,GACHiC,MAAM,SAAAd,GAEHe,YAAW,WACPC,QAAQC,IAAIjB,GACZY,EAAS,CACLf,KAAKG,EACLU,SAAQ,MAGb,UAGb,CAAC7B,IACI8B,EDpBuBO,CAAarC,GAA/BsB,EAHuB,EAG5BN,KAAYa,EAHgB,EAGhBA,QAKnB,OACI,qCACI,oBAAIJ,UAAU,uCAAd,SAAsDzB,IAErD6B,GAAU,mBAAGJ,UAAW,mCAAd,wBACV,qBAAKA,UAAU,YAAf,SAIOH,EAAOJ,KAAI,SAAAC,GACP,OACI,wBAAC,EAAD,2BACQA,GADR,IAEImB,IAAKnB,EAAIC,eEU1BmB,EAhCM,WAAK,IAAD,EAIW/C,mBAAS,CAAC,kBAJrB,mBAIlBgD,EAJkB,KAINjD,EAJM,KAQzB,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAGA,6BAEIiD,EAAWtB,KAAI,SAAAlB,GAAQ,OACnB,cAAC,EAAD,CAEIA,SAAUA,GADLA,Y,MChBzByC,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.c170d9bf.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropType from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e)=>{\r\n\r\n        setInputValue(e.target.value)\r\n    };\r\n\r\n    const handleSubmit = (e)=>{\r\n        e.preventDefault();\r\n\r\n        if(inputValue.trim().length>2){\r\n            \r\n            setCategories(category =>[inputValue,...category  ]);\r\n            setInputValue('');\r\n        }\r\n\r\n    };\r\n    return (\r\n        \r\n        <form onSubmit={handleSubmit}>\r\n            <input\r\n                type=\"text\"\r\n                value = {inputValue}\r\n                onChange={handleInputChange}\r\n            \r\n            />\r\n        </form>    \r\n        \r\n    );\r\n};\r\n\r\nAddCategory.protoType={\r\n\r\n    setCategories:PropType.func.isRequired,\r\n}","\r\n\r\nexport const getGifs = async(category)=>{\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}}&limit=20&api_key=BrZQbQGBHKhwrTfowj8F7x3uELJ6UvXN`;\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n\r\n\r\n    const gifs = data.map(img => {\r\n        return{\r\n            id:img.id,\r\n            title:img.title,\r\n            url:img.images?.downsized_medium.url\r\n\r\n        }\r\n\r\n    })\r\n    return gifs;\r\n    \r\n    \r\n\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({title , url}) => {\r\n    \r\n    return (\r\n        <div className=\"card animate__animated animate__backInDown\">\r\n            <img src={url} alt={title}/>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React  from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\n\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n\r\n    const {data:images,loading} = useFetchGifs(category);\r\n    \r\n\r\n    \r\n\r\n    return (\r\n        <>\r\n            <h2 className=\"animate__animated animate__heartBeat\">{category}</h2>\r\n\r\n            {loading &&<p className= \"animate__animated animate__flash\">loading...</p> }\r\n            {<div className=\"card-grid\">\r\n            \r\n             \r\n                {\r\n                    images.map(img => {\r\n                        return(\r\n                            <GifGridItem \r\n                                {...img}\r\n                                key={img.id}\r\n                            />\r\n                        )\r\n                    })\r\n                }\r\n                \r\n\r\n           \r\n            </div>}\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport {getGifs} from '../helpers/getGifs';\r\n\r\n\r\nexport const useFetchGifs = (category)=>{\r\n\r\n    const [state, setState] = useState({\r\n\r\n        data: [],\r\n        loading: true,\r\n    });\r\n\r\n    useEffect( () => {\r\n\r\n        getGifs(category)\r\n            .then( img => {\r\n\r\n                setTimeout(() => {\r\n                    console.log(img)\r\n                    setState({\r\n                        data:img,\r\n                        loading:false,\r\n                    });\r\n\r\n                }, 2000);\r\n            })\r\n            \r\n    },[category])\r\n    return state;\r\n}\r\n","import React, { useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nconst GifExpertApp = ()=>{\r\n\r\n\r\n\r\nconst [categories, setCategories] = useState(['One Punch Man']);\r\n\r\n\r\n\r\nreturn(\r\n    <>\r\n        <h2>GifExpertApp</h2>\r\n        <AddCategory setCategories={setCategories}/>\r\n        <hr/>\r\n    \r\n\r\n        <ol>\r\n           {\r\n            categories.map(category =>(  \r\n                <GifGrid \r\n                    key={category}\r\n                    category={category}\r\n\r\n                />\r\n            ))\r\n           } \r\n        </ol>\r\n        \r\n\r\n    </>\r\n)};\r\n\r\n\r\nexport default GifExpertApp;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\n\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}